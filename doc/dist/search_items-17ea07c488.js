searchNodes=[{"doc":"Holds the domain types and business logic.","ref":"StoneChallenge.html","title":"StoneChallenge","type":"module"},{"doc":"Interface for interacting with cost managing modules.","ref":"StoneChallenge.CostManaging.html","title":"StoneChallenge.CostManaging","type":"module"},{"doc":"Returns a struct of StoneChallenge.CostManaging.PurchaseItem type.Parametersattrs: map with name as string, quantity as integer and unit_price_in_cents as integer.","ref":"StoneChallenge.CostManaging.html#create_purchase_item/1","title":"StoneChallenge.CostManaging.create_purchase_item/1","type":"function"},{"doc":"Returns a map of String =&gt; integer structure, representing the divided price to be paid by each 'email'.Parameterspurchase_list: list of StoneChallenge.CostManaging.PurchaseItem structsemails: list of strings","ref":"StoneChallenge.CostManaging.html#divide_costs_among_emails/2","title":"StoneChallenge.CostManaging.divide_costs_among_emails/2","type":"function"},{"doc":"Interface for interacting with data generating modules.","ref":"StoneChallenge.DataGeneration.html","title":"StoneChallenge.DataGeneration","type":"module"},{"doc":"Returns a list of strings representing emails.Parametersammount_of_emails: optional parameter that sets the ammount of emails to be present in the list.","ref":"StoneChallenge.DataGeneration.html#email_list/1","title":"StoneChallenge.DataGeneration.email_list/1","type":"function"},{"doc":"Returns a list of StoneChallenge.CostManaging.PurchaseItem structs.Parametersammount_of_items: optional parameter that sets the ammount of structs to be present in the list.","ref":"StoneChallenge.DataGeneration.html#purchase_list/1","title":"StoneChallenge.DataGeneration.purchase_list/1","type":"function"},{"doc":"Provides functions to divide list of ProductItems costs among a list of emails.","ref":"StoneChallenge.CostManaging.Divisor.html","title":"StoneChallenge.CostManaging.Divisor","type":"module"},{"doc":"","ref":"StoneChallenge.CostManaging.Divisor.html#cost_by_email/2","title":"StoneChallenge.CostManaging.Divisor.cost_by_email/2","type":"function"},{"doc":"Provides a type for purchase list items.","ref":"StoneChallenge.CostManaging.PurchaseItem.html","title":"StoneChallenge.CostManaging.PurchaseItem","type":"module"},{"doc":"Returns a list of strings representing the necessary keys for creating structs of StoneChallenge.CostManaging.PurchaseItem type.","ref":"StoneChallenge.CostManaging.PurchaseItem.html#necessary_keys/0","title":"StoneChallenge.CostManaging.PurchaseItem.necessary_keys/0","type":"function"},{"doc":"Type that represents ProductItem structs with name as string, quantity as integer and unit_price_in_cents as integer.","ref":"StoneChallenge.CostManaging.PurchaseItem.html#t:t/0","title":"StoneChallenge.CostManaging.PurchaseItem.t/0","type":"type"},{"doc":"Provides functions for email string generation.","ref":"StoneChallenge.DataGeneration.Emails.html","title":"StoneChallenge.DataGeneration.Emails","type":"module"},{"doc":"Returns a random string representing an email domain.Examples iex&gt; StoneChallenge.DataGeneration.Emails.generate_domain() &quot;@dmail.com&quot;","ref":"StoneChallenge.DataGeneration.Emails.html#generate_domain/0","title":"StoneChallenge.DataGeneration.Emails.generate_domain/0","type":"function"},{"doc":"Returns a random string representing an email name.Example iex&gt; StoneChallenge.DataGeneration.Emails.generate_name() &quot;estevan&quot;","ref":"StoneChallenge.DataGeneration.Emails.html#generate_name/0","title":"StoneChallenge.DataGeneration.Emails.generate_name/0","type":"function"},{"doc":"Provides functions for lists of unique email strings or PurchaseItem structs.","ref":"StoneChallenge.DataGeneration.Lists.html","title":"StoneChallenge.DataGeneration.Lists","type":"module"},{"doc":"Generates a list of numberend, and thus unique, strings representing emails.Parametersammount_of_emails: Integer with number of emails to be returned in the list.Examples iex&gt; StoneChallenge.DataGeneration.Lists.emails(2) [&quot;estevan1@amail.com&quot;, &quot;vinicius2@bmail.com&quot;]","ref":"StoneChallenge.DataGeneration.Lists.html#emails/1","title":"StoneChallenge.DataGeneration.Lists.emails/1","type":"function"},{"doc":"Generates a list of StoneChallenge.CostManaging.PurchaseItem structs.Parametersammount_of_items: Integer with number of items to be returned in the list.Example iex&gt; StoneChallenge.DataGeneration.Lists.purchase(3) [%StoneChallenge.CostManaging.PurchaseItem{ name: &quot;Mango&quot;, quantity: 2, unit_price_in_cents: 50 }, %StoneChallenge.CostManaging.PurchaseItem{ name: &quot;Banana&quot;, quantity: 2, unit_price_in_cents: 360 }, %StoneChallenge.CostManaging.PurchaseItem{ name: &quot;Pineapple&quot;, quantity: 5, unit_price_in_cents: 3900 } ]","ref":"StoneChallenge.DataGeneration.Lists.html#purchase/1","title":"StoneChallenge.DataGeneration.Lists.purchase/1","type":"function"},{"doc":"Provides function for ProductItem struct generation.","ref":"StoneChallenge.DataGeneration.PurchaseItems.html","title":"StoneChallenge.DataGeneration.PurchaseItems","type":"module"},{"doc":"Returns a struct of StoneChallenge.CostManaging.PurchaseItem type.Example iex&gt; StoneChallenge.DataGeneration.PurchaseItems.generate() %StoneChallenge.CostManaging.PurchaseItem{name: &quot;Mango&quot;, quantity: 4, unit_price_in_cents: 650}","ref":"StoneChallenge.DataGeneration.PurchaseItems.html#generate/0","title":"StoneChallenge.DataGeneration.PurchaseItems.generate/0","type":"function"}]